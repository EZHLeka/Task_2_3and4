-- Попробуйте вывести не просто самую высокую зарплату во всей команде, 
-- а вывести именно фамилию сотрудника с самой высокой зарплатой.
SELECT 	e.id, ps.surname ||' '||ps.name ||' '|| ps.patronymic  as FIO , me.msl
FROM 	employees e 
inner join	(SELECT	max(em.salary_level) as msl
			 FROM 	employees em) as me on e.salary_level = me.msl
inner join	persons as ps on ps.id = e.person_id	
-- Попробуйте вывести фамилии сотрудников в алфавитном порядке
SELECT 	e.id, ps.surname ||' '||ps.name ||' '|| ps.patronymic  as FIO
FROM 	employees e 
inner join	persons as ps on ps.id = e.person_id
order by ps.surname
-- Рассчитайте средний стаж для каждого уровня сотрудников
SELECT ex.id, ex.name,
cast(avg((	DATE_PART('year',CURRENT_DATE) - DATE_PART('year', em.work_begin_date)) * 12 + 
		DATE_PART('month',CURRENT_DATE) - DATE_PART('month', em.work_begin_date)) as numeric(18,2) ) as avg_stage_month
FROM persons as ps
inner join employees em on ps.id = em.person_id
inner join experiences ex on em.experience_id = ex.id
group by em.experience_id, ex.name, ex.id
order by ex.id
-- Выведите фамилию сотрудника и название отдела, в котором он работает
SELECT 	e.id, ps.surname ||' '||ps.name ||' '|| ps.patronymic  as FIO, d.name
FROM 	employees e 
inner join	persons ps on ps.id = e.person_id
inner join	departments d on e.department_id = d.id
where ps.surname LIKE '%Ат%';
-- Выведите название отдела и фамилию сотрудника с самой высокой зарплатой в данном отделе и саму зарплату также.
SELECT 	d.name, e.id, ps.surname ||' '||ps.name ||' '|| ps.patronymic  as FIO, me.msl
FROM 	employees e 
inner join	(SELECT	max(em.salary_level) as msl, em.department_id
			 FROM 	employees em
				group by em.department_id
			) as me on e.salary_level = me.msl and e.department_id = me.department_id 
inner join persons as ps on ps.id = e.person_id
inner join departments d on e.department_id = d.id
-- *Выведите название отдела, сотрудники которого получат наибольшую премию по итогам года. 
-- Как рассчитать премию можно узнать в последнем задании предыдущей домашней работы
SELECT 	d.id, d.name, sum(e.salary_level * e.rate)   
FROM 	employees e 
inner join departments d on e.department_id = d.id 
group by department_id, d.id, d.name
having sum(e.salary_level * e.rate) = (SELECT max(mbonus)  as m_b  FROM
											(	SELECT	em.department_id, sum(em.salary_level * em.rate) as mbonus
												FROM 	employees em 	
												group by em.department_id ) as t) 
-- *Проиндексируйте зарплаты сотрудников с учетом коэффициента премии.
CREATE TABLE salary_employees
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    employee_id integer NOT NULL REFERENCES employees,  
	salary integer NOT NULL
    salary_date date NOT NULL   
);

INSERT INTO public.salary_employees(employee_id, salary_date, salary)
SELECT id, to_date('2022-01-01' , 'YYYY-MM-DD'), salary_level FROM employees;

INSERT INTO public.salary_employees(employee_id, salary_date, salary)
SELECT id, to_date('2022-02-01' , 'YYYY-MM-DD'), 
salary_level * 	case 	when rate > 1.2 then 1.2
						when rate between 1.0 and 1.2 then 1.1
				else 1 end
FROM employees;

SELECT * FROM salary_employees;










	





